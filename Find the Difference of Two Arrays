class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        return diff(nums1,nums2);
   
} 
    public static List<List<Integer>> diff(int[] nums1, int[] nums2){
        List<List<Integer>> List = new ArrayList<>();

    HashSet<Integer> map1 = new HashSet<>();
          HashSet<Integer> map2 = new HashSet<>();
        for(int i = 0;i<nums1.length;i++){
            if(!map1.contains(nums1[i])){
                map1.add(nums1[i]);
            }
        }
          for(int i = 0;i<nums2.length;i++){
            if(!map2.contains(nums2[i])){
                map2.add(nums2[i]);
            }
        }
        ArrayList<Integer>  l1 = new ArrayList<>();
        
           for(int a:map1){
            if(!map2.contains(a)){
                 l1.add(a);
            }
             
        }
        List.add(l1); 
         ArrayList<Integer>  l2 = new ArrayList<>();
        
           for(int i:map2){
            if(!map1.contains(i)){
               l2.add(i);
            }
               
        }
        List.add(l2); 
        
        return List;
    }
    }
